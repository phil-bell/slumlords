{"version":3,"file":"bundle.js","sources":["../../../../../../node_modules/lit-html/lib/dom.js","../../../../../../node_modules/lit-html/lib/template.js","../../../../../../node_modules/lit-html/lib/modify-template.js","../../../../../../node_modules/lit-html/lib/directive.js","../../../../../../node_modules/lit-html/lib/part.js","../../../../../../node_modules/lit-html/lib/template-instance.js","../../../../../../node_modules/lit-html/lib/template-result.js","../../../../../../node_modules/lit-html/lib/parts.js","../../../../../../node_modules/lit-html/lib/template-factory.js","../../../../../../node_modules/lit-html/lib/render.js","../../../../../../node_modules/lit-html/lib/default-template-processor.js","../../../../../../node_modules/lit-html/lit-html.js","../../../../../../node_modules/lit-html/lib/shady-render.js","../../../../../../node_modules/lit-element/lib/updating-element.js","../../../../../../node_modules/lit-element/lib/css-tag.js","../../../../../../node_modules/lit-element/lit-element.js","../../../../../../node_modules/js-cookie/src/js.cookie.js","../../../../../../node_modules/django-form-component/django-form/django-form.js"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = typeof window !== 'undefined' &&\n    window.customElements != null &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updatable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = \n// eslint-disable-next-line no-control-regex\n/([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isTemplatePartActive } from './template.js';\nconst walkerNodeFilter = 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;\n/**\n * Removes the list of nodes from a Template safely. In addition to removing\n * nodes from the Template, the Template part indices are updated to match\n * the mutated Template DOM.\n *\n * As the template is walked the removal state is tracked and\n * part indices are adjusted as needed.\n *\n * div\n *   div#1 (remove) <-- start removing (removing node is div#1)\n *     div\n *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n *         div\n * div <-- stop removing since previous sibling is the removing node (div#1,\n * removed 4 nodes)\n */\nexport function removeNodesFromTemplate(template, nodesToRemove) {\n    const { element: { content }, parts } = template;\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let part = parts[partIndex];\n    let nodeIndex = -1;\n    let removeCount = 0;\n    const nodesToRemoveInTemplate = [];\n    let currentRemovingNode = null;\n    while (walker.nextNode()) {\n        nodeIndex++;\n        const node = walker.currentNode;\n        // End removal if stepped past the removing node\n        if (node.previousSibling === currentRemovingNode) {\n            currentRemovingNode = null;\n        }\n        // A node to remove was found in the template\n        if (nodesToRemove.has(node)) {\n            nodesToRemoveInTemplate.push(node);\n            // Track node we're removing\n            if (currentRemovingNode === null) {\n                currentRemovingNode = node;\n            }\n        }\n        // When removing, increment count by which to adjust subsequent part indices\n        if (currentRemovingNode !== null) {\n            removeCount++;\n        }\n        while (part !== undefined && part.index === nodeIndex) {\n            // If part is in a removed node deactivate it by setting index to -1 or\n            // adjust the index as needed.\n            part.index = currentRemovingNode !== null ? -1 : part.index - removeCount;\n            // go to the next active part.\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n            part = parts[partIndex];\n        }\n    }\n    nodesToRemoveInTemplate.forEach((n) => n.parentNode.removeChild(n));\n}\nconst countNodes = (node) => {\n    let count = (node.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */) ? 0 : 1;\n    const walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n    while (walker.nextNode()) {\n        count++;\n    }\n    return count;\n};\nconst nextActiveIndexInTemplateParts = (parts, startIndex = -1) => {\n    for (let i = startIndex + 1; i < parts.length; i++) {\n        const part = parts[i];\n        if (isTemplatePartActive(part)) {\n            return i;\n        }\n    }\n    return -1;\n};\n/**\n * Inserts the given node into the Template, optionally before the given\n * refNode. In addition to inserting the node into the Template, the Template\n * part indices are updated to match the mutated Template DOM.\n */\nexport function insertNodeIntoTemplate(template, node, refNode = null) {\n    const { element: { content }, parts } = template;\n    // If there's no refNode, then put node at end of template.\n    // No part indices need to be shifted in this case.\n    if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n    }\n    const walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n    let partIndex = nextActiveIndexInTemplateParts(parts);\n    let insertCount = 0;\n    let walkerIndex = -1;\n    while (walker.nextNode()) {\n        walkerIndex++;\n        const walkerNode = walker.currentNode;\n        if (walkerNode === refNode) {\n            insertCount = countNodes(node);\n            refNode.parentNode.insertBefore(node, refNode);\n        }\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n            // If we've inserted the node, simply adjust all subsequent parts\n            if (insertCount > 0) {\n                while (partIndex !== -1) {\n                    parts[partIndex].index += insertCount;\n                    partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n                }\n                return;\n            }\n            partIndex = nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n    }\n}\n//# sourceMappingURL=modify-template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari does not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * Our TrustedTypePolicy for HTML which is declared using the html template\n * tag function.\n *\n * That HTML is a developer-authored constant, and is parsed with innerHTML\n * before any untrusted expressions have been mixed in. Therefor it is\n * considered safe by construction.\n */\nconst policy = window.trustedTypes &&\n    trustedTypes.createPolicy('lit-html', { createHTML: (s) => s });\nconst commentMarker = ` ${marker} `;\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? commentMarker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        let value = this.getHTML();\n        if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n        }\n        template.innerHTML = value;\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attribute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        const parts = this.parts;\n        // If we're assigning an attribute via syntax like:\n        //    attr=\"${foo}\"  or  attr=${foo}\n        // but not\n        //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n        // then we don't want to coerce the attribute value into one long\n        // string. Instead we want to just return the value itself directly,\n        // so that sanitizeDOMValue can get the actual value rather than\n        // String(value)\n        // The exception is if v is an array, in which case we do want to smash\n        // it together into a string without calling String() on the array.\n        //\n        // This also allows trusted values (when using TrustedTypes) being\n        // assigned to DOM sinks without being stringified in the process.\n        if (l === 1 && strings[0] === '' && strings[1] === '') {\n            const v = parts[0].value;\n            if (typeof v === 'symbol') {\n                return String(v);\n            }\n            if (typeof v === 'string' || !isIterable(v)) {\n                return v;\n            }\n        }\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        if (this.startNode.parentNode === null) {\n            return;\n        }\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the third\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\n// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n// blocks right into the body of a module\n(() => {\n    try {\n        const options = {\n            get capture() {\n                eventOptionsSupported = true;\n                return false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.addEventListener('test', options, options);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        window.removeEventListener('test', options, options);\n    }\n    catch (_e) {\n        // event options not supported\n    }\n})();\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n    (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.3.0');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * Module to add shady DOM/shady CSS polyfill support to lit-html template\n * rendering. See the [[render]] method for details.\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { removeNodes } from './dom.js';\nimport { insertNodeIntoTemplate, removeNodesFromTemplate } from './modify-template.js';\nimport { parts, render as litRender } from './render.js';\nimport { templateCaches } from './template-factory.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { marker, Template } from './template.js';\nexport { html, svg, TemplateResult } from '../lit-html.js';\n// Get a key to lookup in `templateCaches`.\nconst getTemplateCacheKey = (type, scopeName) => `${type}--${scopeName}`;\nlet compatibleShadyCSSVersion = true;\nif (typeof window.ShadyCSS === 'undefined') {\n    compatibleShadyCSSVersion = false;\n}\nelse if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n    console.warn(`Incompatible ShadyCSS version detected. ` +\n        `Please update to at least @webcomponents/webcomponentsjs@2.0.2 and ` +\n        `@webcomponents/shadycss@1.3.1.`);\n    compatibleShadyCSSVersion = false;\n}\n/**\n * Template factory which scopes template DOM using ShadyCSS.\n * @param scopeName {string}\n */\nexport const shadyTemplateFactory = (scopeName) => (result) => {\n    const cacheKey = getTemplateCacheKey(result.type, scopeName);\n    let templateCache = templateCaches.get(cacheKey);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(cacheKey, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    const key = result.strings.join(marker);\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        const element = result.getTemplateElement();\n        if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n        }\n        template = new Template(result, element);\n        templateCache.keyString.set(key, template);\n    }\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n};\nconst TEMPLATE_TYPES = ['html', 'svg'];\n/**\n * Removes all style elements from Templates for the given scopeName.\n */\nconst removeStylesFromLitTemplates = (scopeName) => {\n    TEMPLATE_TYPES.forEach((type) => {\n        const templates = templateCaches.get(getTemplateCacheKey(type, scopeName));\n        if (templates !== undefined) {\n            templates.keyString.forEach((template) => {\n                const { element: { content } } = template;\n                // IE 11 doesn't support the iterable param Set constructor\n                const styles = new Set();\n                Array.from(content.querySelectorAll('style')).forEach((s) => {\n                    styles.add(s);\n                });\n                removeNodesFromTemplate(template, styles);\n            });\n        }\n    });\n};\nconst shadyRenderSet = new Set();\n/**\n * For the given scope name, ensures that ShadyCSS style scoping is performed.\n * This is done just once per scope name so the fragment and template cannot\n * be modified.\n * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n * to be scoped and appended to the document\n * (2) removes style elements from all lit-html Templates for this scope name.\n *\n * Note, <style> elements can only be placed into templates for the\n * initial rendering of the scope. If <style> elements are included in templates\n * dynamically rendered to the scope (after the first scope render), they will\n * not be scoped and the <style> will be left in the template and rendered\n * output.\n */\nconst prepareTemplateStyles = (scopeName, renderedDOM, template) => {\n    shadyRenderSet.add(scopeName);\n    // If `renderedDOM` is stamped from a Template, then we need to edit that\n    // Template's underlying template element. Otherwise, we create one here\n    // to give to ShadyCSS, which still requires one while scoping.\n    const templateElement = !!template ? template.element : document.createElement('template');\n    // Move styles out of rendered DOM and store.\n    const styles = renderedDOM.querySelectorAll('style');\n    const { length } = styles;\n    // If there are no styles, skip unnecessary work\n    if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n    }\n    const condensedStyle = document.createElement('style');\n    // Collect styles into a single style. This helps us make sure ShadyCSS\n    // manipulations will not prevent us from being able to fix up template\n    // part indices.\n    // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n    // currently does this anyway. When it does not, this should be changed.\n    for (let i = 0; i < length; i++) {\n        const style = styles[i];\n        style.parentNode.removeChild(style);\n        condensedStyle.textContent += style.textContent;\n    }\n    // Remove styles from nested templates in this scope.\n    removeStylesFromLitTemplates(scopeName);\n    // And then put the condensed style into the \"root\" template passed in as\n    // `template`.\n    const content = templateElement.content;\n    if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n    }\n    else {\n        content.insertBefore(condensedStyle, content.firstChild);\n    }\n    // Note, it's important that ShadyCSS gets the template that `lit-html`\n    // will actually render so that it can update the style inside when\n    // needed (e.g. @apply native Shadow DOM case).\n    window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n    const style = content.querySelector('style');\n    if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n    }\n    else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        const removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n    }\n};\n/**\n * Extension to the standard `render` method which supports rendering\n * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n * or when the webcomponentsjs\n * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n *\n * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n * when native ShadowDOM is unavailable. The `scopeName` will be added to\n * the class attribute of all rendered DOM. In addition, any style elements will\n * be automatically re-written with this `scopeName` selector and moved out\n * of the rendered DOM and into the document `<head>`.\n *\n * It is common to use this render method in conjunction with a custom element\n * which renders a shadowRoot. When this is done, typically the element's\n * `localName` should be used as the `scopeName`.\n *\n * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n * custom properties (needed only on older browsers like IE11) and a shim for\n * a deprecated feature called `@apply` that supports applying a set of css\n * custom properties to a given location.\n *\n * Usage considerations:\n *\n * * Part values in `<style>` elements are only applied the first time a given\n * `scopeName` renders. Subsequent changes to parts in style elements will have\n * no effect. Because of this, parts in style elements should only be used for\n * values that will never change, for example parts that set scope-wide theme\n * values or parts which render shared style elements.\n *\n * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n * custom element's `constructor` is not supported. Instead rendering should\n * either done asynchronously, for example at microtask timing (for example\n * `Promise.resolve()`), or be deferred until the first time the element's\n * `connectedCallback` runs.\n *\n * Usage considerations when using shimmed custom properties or `@apply`:\n *\n * * Whenever any dynamic changes are made which affect\n * css custom properties, `ShadyCSS.styleElement(element)` must be called\n * to update the element. There are two cases when this is needed:\n * (1) the element is connected to a new parent, (2) a class is added to the\n * element that causes it to match different custom properties.\n * To address the first case when rendering a custom element, `styleElement`\n * should be called in the element's `connectedCallback`.\n *\n * * Shimmed custom properties may only be defined either for an entire\n * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n * matches an element with a shadowRoot. In other words, instead of flowing from\n * parent to child as do native css custom properties, shimmed custom properties\n * flow only from shadowRoots to nested shadowRoots.\n *\n * * When using `@apply` mixing css shorthand property names with\n * non-shorthand names (for example `border` and `border-width`) is not\n * supported.\n */\nexport const render = (result, container, options) => {\n    if (!options || typeof options !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n    }\n    const scopeName = options.scopeName;\n    const hasRendered = parts.has(container);\n    const needsScoping = compatibleShadyCSSVersion &&\n        container.nodeType === 11 /* Node.DOCUMENT_FRAGMENT_NODE */ &&\n        !!container.host;\n    // Handle first render to a scope specially...\n    const firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName);\n    // On first scope render, render into a fragment; this cannot be a single\n    // fragment that is reused since nested renders can occur synchronously.\n    const renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n    litRender(result, renderContainer, Object.assign({ templateFactory: shadyTemplateFactory(scopeName) }, options));\n    // When performing first scope render,\n    // (1) We've rendered into a fragment so that there's a chance to\n    // `prepareTemplateStyles` before sub-elements hit the DOM\n    // (which might cause them to render based on a common pattern of\n    // rendering in a custom element's `connectedCallback`);\n    // (2) Scope the template with ShadyCSS one time only for this scope.\n    // (3) Render the fragment into the container and make sure the\n    // container knows its `part` is the one we just rendered. This ensures\n    // DOM will be re-used on subsequent renders.\n    if (firstScopeRender) {\n        const part = parts.get(renderContainer);\n        parts.delete(renderContainer);\n        // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n        const template = part.value instanceof TemplateInstance ?\n            part.value.template :\n            undefined;\n        prepareTemplateStyles(scopeName, renderContainer, template);\n        removeNodes(container, container.firstChild);\n        container.appendChild(renderContainer);\n        parts.set(container, part);\n    }\n    // After elements have hit the DOM, update styling if this is the\n    // initial render to this container.\n    // This is needed whenever dynamic changes are made so it would be\n    // safest to do every render; however, this would regress performance\n    // so we leave it up to the user to call `ShadyCSS.styleElement`\n    // for dynamic changes.\n    if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n    }\n};\n//# sourceMappingURL=shady-render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nvar _a;\n/**\n * Use this module if you want to create your own base class extending\n * [[UpdatingElement]].\n * @packageDocumentation\n */\n/*\n * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n * replaced at compile time by the munged name for object[property]. We cannot\n * alias this function, so we have to use a small shim that has the same\n * behavior when not compiling.\n */\nwindow.JSCompiler_renameProperty =\n    (prop, _obj) => prop;\nexport const defaultConverter = {\n    toAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value ? '' : null;\n            case Object:\n            case Array:\n                // if the value is `null` or `undefined` pass this through\n                // to allow removing/no change behavior.\n                return value == null ? value : JSON.stringify(value);\n        }\n        return value;\n    },\n    fromAttribute(value, type) {\n        switch (type) {\n            case Boolean:\n                return value !== null;\n            case Number:\n                return value === null ? null : Number(value);\n            case Object:\n            case Array:\n                return JSON.parse(value);\n        }\n        return value;\n    }\n};\n/**\n * Change function that returns true if `value` is different from `oldValue`.\n * This method is used as the default for a property's `hasChanged` function.\n */\nexport const notEqual = (value, old) => {\n    // This ensures (old==NaN, value==NaN) always returns false\n    return old !== value && (old === old || value === value);\n};\nconst defaultPropertyDeclaration = {\n    attribute: true,\n    type: String,\n    converter: defaultConverter,\n    reflect: false,\n    hasChanged: notEqual\n};\nconst STATE_HAS_UPDATED = 1;\nconst STATE_UPDATE_REQUESTED = 1 << 2;\nconst STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\nconst STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n/**\n * The Closure JS Compiler doesn't currently have good support for static\n * property semantics where \"this\" is dynamic (e.g.\n * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n * this hack to bypass any rewriting by the compiler.\n */\nconst finalized = 'finalized';\n/**\n * Base element class which manages element properties and attributes. When\n * properties change, the `update` method is asynchronously called. This method\n * should be supplied by subclassers to render updates as desired.\n * @noInheritDoc\n */\nexport class UpdatingElement extends HTMLElement {\n    constructor() {\n        super();\n        this.initialize();\n    }\n    /**\n     * Returns a list of attributes corresponding to the registered properties.\n     * @nocollapse\n     */\n    static get observedAttributes() {\n        // note: piggy backing on this to ensure we're finalized.\n        this.finalize();\n        const attributes = [];\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this._classProperties.forEach((v, p) => {\n            const attr = this._attributeNameForProperty(p, v);\n            if (attr !== undefined) {\n                this._attributeToPropertyMap.set(attr, p);\n                attributes.push(attr);\n            }\n        });\n        return attributes;\n    }\n    /**\n     * Ensures the private `_classProperties` property metadata is created.\n     * In addition to `finalize` this is also called in `createProperty` to\n     * ensure the `@property` decorator can add property metadata.\n     */\n    /** @nocollapse */\n    static _ensureClassProperties() {\n        // ensure private storage for property declarations.\n        if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map();\n            // NOTE: Workaround IE11 not supporting Map constructor argument.\n            const superProperties = Object.getPrototypeOf(this)._classProperties;\n            if (superProperties !== undefined) {\n                superProperties.forEach((v, k) => this._classProperties.set(k, v));\n            }\n        }\n    }\n    /**\n     * Creates a property accessor on the element prototype if one does not exist\n     * and stores a PropertyDeclaration for the property with the given options.\n     * The property setter calls the property's `hasChanged` property option\n     * or uses a strict identity check to determine whether or not to request\n     * an update.\n     *\n     * This method may be overridden to customize properties; however,\n     * when doing so, it's important to call `super.createProperty` to ensure\n     * the property is setup correctly. This method calls\n     * `getPropertyDescriptor` internally to get a descriptor to install.\n     * To customize what properties do when they are get or set, override\n     * `getPropertyDescriptor`. To customize the options for a property,\n     * implement `createProperty` like this:\n     *\n     * static createProperty(name, options) {\n     *   options = Object.assign(options, {myOption: true});\n     *   super.createProperty(name, options);\n     * }\n     *\n     * @nocollapse\n     */\n    static createProperty(name, options = defaultPropertyDeclaration) {\n        // Note, since this can be called by the `@property` decorator which\n        // is called before `finalize`, we ensure storage exists for property\n        // metadata.\n        this._ensureClassProperties();\n        this._classProperties.set(name, options);\n        // Do not generate an accessor if the prototype already has one, since\n        // it would be lost otherwise and that would never be the user's intention;\n        // Instead, we expect users to call `requestUpdate` themselves from\n        // user-defined accessors. Note that if the super has an accessor we will\n        // still overwrite it\n        if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n        }\n        const key = typeof name === 'symbol' ? Symbol() : `__${name}`;\n        const descriptor = this.getPropertyDescriptor(name, key, options);\n        if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n        }\n    }\n    /**\n     * Returns a property descriptor to be defined on the given named property.\n     * If no descriptor is returned, the property will not become an accessor.\n     * For example,\n     *\n     *   class MyElement extends LitElement {\n     *     static getPropertyDescriptor(name, key, options) {\n     *       const defaultDescriptor =\n     *           super.getPropertyDescriptor(name, key, options);\n     *       const setter = defaultDescriptor.set;\n     *       return {\n     *         get: defaultDescriptor.get,\n     *         set(value) {\n     *           setter.call(this, value);\n     *           // custom action.\n     *         },\n     *         configurable: true,\n     *         enumerable: true\n     *       }\n     *     }\n     *   }\n     *\n     * @nocollapse\n     */\n    static getPropertyDescriptor(name, key, options) {\n        return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get() {\n                return this[key];\n            },\n            set(value) {\n                const oldValue = this[name];\n                this[key] = value;\n                this\n                    .requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n        };\n    }\n    /**\n     * Returns the property options associated with the given property.\n     * These options are defined with a PropertyDeclaration via the `properties`\n     * object or the `@property` decorator and are registered in\n     * `createProperty(...)`.\n     *\n     * Note, this method should be considered \"final\" and not overridden. To\n     * customize the options for a given property, override `createProperty`.\n     *\n     * @nocollapse\n     * @final\n     */\n    static getPropertyOptions(name) {\n        return this._classProperties && this._classProperties.get(name) ||\n            defaultPropertyDeclaration;\n    }\n    /**\n     * Creates property accessors for registered properties and ensures\n     * any superclasses are also finalized.\n     * @nocollapse\n     */\n    static finalize() {\n        // finalize any superclasses\n        const superCtor = Object.getPrototypeOf(this);\n        if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n        }\n        this[finalized] = true;\n        this._ensureClassProperties();\n        // initialize Map populated in observedAttributes\n        this._attributeToPropertyMap = new Map();\n        // make any properties\n        // Note, only process \"own\" properties since this element will inherit\n        // any properties defined on the superClass, and finalization ensures\n        // the entire prototype chain is finalized.\n        if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            const props = this.properties;\n            // support symbols in properties (IE11 does not support this)\n            const propKeys = [\n                ...Object.getOwnPropertyNames(props),\n                ...(typeof Object.getOwnPropertySymbols === 'function') ?\n                    Object.getOwnPropertySymbols(props) :\n                    []\n            ];\n            // This for/of is ok because propKeys is an array\n            for (const p of propKeys) {\n                // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n                this.createProperty(p, props[p]);\n            }\n        }\n    }\n    /**\n     * Returns the property name for the given attribute `name`.\n     * @nocollapse\n     */\n    static _attributeNameForProperty(name, options) {\n        const attribute = options.attribute;\n        return attribute === false ?\n            undefined :\n            (typeof attribute === 'string' ?\n                attribute :\n                (typeof name === 'string' ? name.toLowerCase() : undefined));\n    }\n    /**\n     * Returns true if a property should request an update.\n     * Called when a property value is set and uses the `hasChanged`\n     * option for the property if present or a strict identity check.\n     * @nocollapse\n     */\n    static _valueHasChanged(value, old, hasChanged = notEqual) {\n        return hasChanged(value, old);\n    }\n    /**\n     * Returns the property value for the given attribute value.\n     * Called via the `attributeChangedCallback` and uses the property's\n     * `converter` or `converter.fromAttribute` property option.\n     * @nocollapse\n     */\n    static _propertyValueFromAttribute(value, options) {\n        const type = options.type;\n        const converter = options.converter || defaultConverter;\n        const fromAttribute = (typeof converter === 'function' ? converter : converter.fromAttribute);\n        return fromAttribute ? fromAttribute(value, type) : value;\n    }\n    /**\n     * Returns the attribute value for the given property value. If this\n     * returns undefined, the property will *not* be reflected to an attribute.\n     * If this returns null, the attribute will be removed, otherwise the\n     * attribute will be set to the value.\n     * This uses the property's `reflect` and `type.toAttribute` property options.\n     * @nocollapse\n     */\n    static _propertyValueToAttribute(value, options) {\n        if (options.reflect === undefined) {\n            return;\n        }\n        const type = options.type;\n        const converter = options.converter;\n        const toAttribute = converter && converter.toAttribute ||\n            defaultConverter.toAttribute;\n        return toAttribute(value, type);\n    }\n    /**\n     * Performs element initialization. By default captures any pre-set values for\n     * registered properties.\n     */\n    initialize() {\n        this._updateState = 0;\n        this._updatePromise =\n            new Promise((res) => this._enableUpdatingResolver = res);\n        this._changedProperties = new Map();\n        this._saveInstanceProperties();\n        // ensures first update will be caught by an early access of\n        // `updateComplete`\n        this.requestUpdateInternal();\n    }\n    /**\n     * Fixes any properties set on the instance before upgrade time.\n     * Otherwise these would shadow the accessor and break these properties.\n     * The properties are stored in a Map which is played back after the\n     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n     * (<=41), properties created for native platform properties like (`id` or\n     * `name`) may not have default values set in the element constructor. On\n     * these browsers native properties appear on instances and therefore their\n     * default value will overwrite any element default (e.g. if the element sets\n     * this.id = 'id' in the constructor, the 'id' will become '' since this is\n     * the native platform default).\n     */\n    _saveInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        this.constructor\n            ._classProperties.forEach((_v, p) => {\n            if (this.hasOwnProperty(p)) {\n                const value = this[p];\n                delete this[p];\n                if (!this._instanceProperties) {\n                    this._instanceProperties = new Map();\n                }\n                this._instanceProperties.set(p, value);\n            }\n        });\n    }\n    /**\n     * Applies previously saved instance properties.\n     */\n    _applyInstanceProperties() {\n        // Use forEach so this works even if for/of loops are compiled to for loops\n        // expecting arrays\n        // tslint:disable-next-line:no-any\n        this._instanceProperties.forEach((v, p) => this[p] = v);\n        this._instanceProperties = undefined;\n    }\n    connectedCallback() {\n        // Ensure first connection completes an update. Updates cannot complete\n        // before connection.\n        this.enableUpdating();\n    }\n    enableUpdating() {\n        if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n            this._enableUpdatingResolver = undefined;\n        }\n    }\n    /**\n     * Allows for `super.disconnectedCallback()` in extensions while\n     * reserving the possibility of making non-breaking feature additions\n     * when disconnecting at some point in the future.\n     */\n    disconnectedCallback() {\n    }\n    /**\n     * Synchronizes property values when attributes change.\n     */\n    attributeChangedCallback(name, old, value) {\n        if (old !== value) {\n            this._attributeToProperty(name, value);\n        }\n    }\n    _propertyToAttribute(name, value, options = defaultPropertyDeclaration) {\n        const ctor = this.constructor;\n        const attr = ctor._attributeNameForProperty(name, options);\n        if (attr !== undefined) {\n            const attrValue = ctor._propertyValueToAttribute(value, options);\n            // an undefined value does not change the attribute.\n            if (attrValue === undefined) {\n                return;\n            }\n            // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n            if (attrValue == null) {\n                this.removeAttribute(attr);\n            }\n            else {\n                this.setAttribute(attr, attrValue);\n            }\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n        }\n    }\n    _attributeToProperty(name, value) {\n        // Use tracking info to avoid deserializing attribute value if it was\n        // just set from a property setter.\n        if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n        }\n        const ctor = this.constructor;\n        // Note, hint this as an `AttributeMap` so closure clearly understands\n        // the type; it has issues with tracking types through statics\n        // tslint:disable-next-line:no-unnecessary-type-assertion\n        const propName = ctor._attributeToPropertyMap.get(name);\n        if (propName !== undefined) {\n            const options = ctor.getPropertyOptions(propName);\n            // mark state reflecting\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] =\n                // tslint:disable-next-line:no-any\n                ctor._propertyValueFromAttribute(value, options);\n            // mark state not reflecting\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n        }\n    }\n    /**\n     * This protected version of `requestUpdate` does not access or return the\n     * `updateComplete` promise. This promise can be overridden and is therefore\n     * not free to access.\n     */\n    requestUpdateInternal(name, oldValue, options) {\n        let shouldRequestUpdate = true;\n        // If we have a property key, perform property update steps.\n        if (name !== undefined) {\n            const ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n                if (!this._changedProperties.has(name)) {\n                    this._changedProperties.set(name, oldValue);\n                }\n                // Add to reflecting properties set.\n                // Note, it's important that every change has a chance to add the\n                // property to `_reflectingProperties`. This ensures setting\n                // attribute + property reflects correctly.\n                if (options.reflect === true &&\n                    !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                    if (this._reflectingProperties === undefined) {\n                        this._reflectingProperties = new Map();\n                    }\n                    this._reflectingProperties.set(name, options);\n                }\n            }\n            else {\n                // Abort the request if the property should not be considered changed.\n                shouldRequestUpdate = false;\n            }\n        }\n        if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n        }\n    }\n    /**\n     * Requests an update which is processed asynchronously. This should\n     * be called when an element should update based on some state not triggered\n     * by setting a property. In this case, pass no arguments. It should also be\n     * called when manually implementing a property setter. In this case, pass the\n     * property `name` and `oldValue` to ensure that any configured property\n     * options are honored. Returns the `updateComplete` Promise which is resolved\n     * when the update completes.\n     *\n     * @param name {PropertyKey} (optional) name of requesting property\n     * @param oldValue {any} (optional) old value of requesting property\n     * @returns {Promise} A Promise that is resolved when the update completes.\n     */\n    requestUpdate(name, oldValue) {\n        this.requestUpdateInternal(name, oldValue);\n        return this.updateComplete;\n    }\n    /**\n     * Sets up the element to asynchronously update.\n     */\n    async _enqueueUpdate() {\n        this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n        try {\n            // Ensure any previous update has resolved before updating.\n            // This `await` also ensures that property changes are batched.\n            await this._updatePromise;\n        }\n        catch (e) {\n            // Ignore any previous errors. We only care that the previous cycle is\n            // done. Any error should have been handled in the previous update.\n        }\n        const result = this.performUpdate();\n        // If `performUpdate` returns a Promise, we await it. This is done to\n        // enable coordinating updates with a scheduler. Note, the result is\n        // checked to avoid delaying an additional microtask unless we need to.\n        if (result != null) {\n            await result;\n        }\n        return !this._hasRequestedUpdate;\n    }\n    get _hasRequestedUpdate() {\n        return (this._updateState & STATE_UPDATE_REQUESTED);\n    }\n    get hasUpdated() {\n        return (this._updateState & STATE_HAS_UPDATED);\n    }\n    /**\n     * Performs an element update. Note, if an exception is thrown during the\n     * update, `firstUpdated` and `updated` will not be called.\n     *\n     * You can override this method to change the timing of updates. If this\n     * method is overridden, `super.performUpdate()` must be called.\n     *\n     * For instance, to schedule updates to occur just before the next frame:\n     *\n     * ```\n     * protected async performUpdate(): Promise<unknown> {\n     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n     *   super.performUpdate();\n     * }\n     * ```\n     */\n    performUpdate() {\n        // Abort any update if one is not pending when this is called.\n        // This can happen if `performUpdate` is called early to \"flush\"\n        // the update.\n        if (!this._hasRequestedUpdate) {\n            return;\n        }\n        // Mixin instance properties once, if they exist.\n        if (this._instanceProperties) {\n            this._applyInstanceProperties();\n        }\n        let shouldUpdate = false;\n        const changedProperties = this._changedProperties;\n        try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n            if (shouldUpdate) {\n                this.update(changedProperties);\n            }\n            else {\n                this._markUpdated();\n            }\n        }\n        catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false;\n            // Ensure element can accept additional updates after an exception.\n            this._markUpdated();\n            throw e;\n        }\n        if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n                this._updateState = this._updateState | STATE_HAS_UPDATED;\n                this.firstUpdated(changedProperties);\n            }\n            this.updated(changedProperties);\n        }\n    }\n    _markUpdated() {\n        this._changedProperties = new Map();\n        this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n    }\n    /**\n     * Returns a Promise that resolves when the element has completed updating.\n     * The Promise value is a boolean that is `true` if the element completed the\n     * update without triggering another update. The Promise result is `false` if\n     * a property was set inside `updated()`. If the Promise is rejected, an\n     * exception was thrown during the update.\n     *\n     * To await additional asynchronous work, override the `_getUpdateComplete`\n     * method. For example, it is sometimes useful to await a rendered element\n     * before fulfilling this Promise. To do this, first await\n     * `super._getUpdateComplete()`, then any subsequent state.\n     *\n     * @returns {Promise} The Promise returns a boolean that indicates if the\n     * update resolved without triggering another update.\n     */\n    get updateComplete() {\n        return this._getUpdateComplete();\n    }\n    /**\n     * Override point for the `updateComplete` promise.\n     *\n     * It is not safe to override the `updateComplete` getter directly due to a\n     * limitation in TypeScript which means it is not possible to call a\n     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n     * This method should be overridden instead. For example:\n     *\n     *   class MyElement extends LitElement {\n     *     async _getUpdateComplete() {\n     *       await super._getUpdateComplete();\n     *       await this._myChild.updateComplete;\n     *     }\n     *   }\n     */\n    _getUpdateComplete() {\n        return this._updatePromise;\n    }\n    /**\n     * Controls whether or not `update` should be called when the element requests\n     * an update. By default, this method always returns `true`, but this can be\n     * customized to control when to update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    shouldUpdate(_changedProperties) {\n        return true;\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes.\n     * It can be overridden to render and keep updated element DOM.\n     * Setting properties inside this method will *not* trigger\n     * another update.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(_changedProperties) {\n        if (this._reflectingProperties !== undefined &&\n            this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach((v, k) => this._propertyToAttribute(k, this[k], v));\n            this._reflectingProperties = undefined;\n        }\n        this._markUpdated();\n    }\n    /**\n     * Invoked whenever the element is updated. Implement to perform\n     * post-updating tasks via DOM APIs, for example, focusing an element.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    updated(_changedProperties) {\n    }\n    /**\n     * Invoked when the element is first updated. Implement to perform one time\n     * work on the element after update.\n     *\n     * Setting properties inside this method will trigger the element to update\n     * again after this update cycle completes.\n     *\n     * @param _changedProperties Map of changed properties with old values\n     */\n    firstUpdated(_changedProperties) {\n    }\n}\n_a = finalized;\n/**\n * Marks class as having finished creating properties.\n */\nUpdatingElement[_a] = true;\n//# sourceMappingURL=updating-element.js.map","/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * The main LitElement module, which defines the [[`LitElement`]] base class and\n * related APIs.\n *\n *  LitElement components can define a template and a set of observed\n * properties. Changing an observed property triggers a re-render of the\n * element.\n *\n *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n * component:\n *\n *  ```js\n * import {LitElement, html} from 'lit-element';\n *\n * class MyElement extends LitElement {\n *\n *   // Declare observed properties\n *   static get properties() {\n *     return {\n *       adjective: {}\n *     }\n *   }\n *\n *   constructor() {\n *     this.adjective = 'awesome';\n *   }\n *\n *   // Define the element's template\n *   render() {\n *     return html`<p>your ${adjective} template here</p>`;\n *   }\n * }\n *\n * customElements.define('my-element', MyElement);\n * ```\n *\n * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n * The `UpdatingElement` class is provided for users that want to build\n * their own custom element base classes that don't use lit-html.\n *\n * @packageDocumentation\n */\nimport { render } from 'lit-html/lib/shady-render.js';\nimport { UpdatingElement } from './lib/updating-element.js';\nexport * from './lib/updating-element.js';\nexport * from './lib/decorators.js';\nexport { html, svg, TemplateResult, SVGTemplateResult } from 'lit-html/lit-html.js';\nimport { supportsAdoptingStyleSheets, unsafeCSS } from './lib/css-tag.js';\nexport * from './lib/css-tag.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for LitElement usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litElementVersions'] || (window['litElementVersions'] = []))\n    .push('2.4.0');\n/**\n * Sentinal value used to avoid calling lit-html's render function when\n * subclasses do not implement `render`\n */\nconst renderNotImplemented = {};\n/**\n * Base element class that manages element properties and attributes, and\n * renders a lit-html template.\n *\n * To define a component, subclass `LitElement` and implement a\n * `render` method to provide the component's template. Define properties\n * using the [[`properties`]] property or the [[`property`]] decorator.\n */\nexport class LitElement extends UpdatingElement {\n    /**\n     * Return the array of styles to apply to the element.\n     * Override this method to integrate into a style management system.\n     *\n     * @nocollapse\n     */\n    static getStyles() {\n        return this.styles;\n    }\n    /** @nocollapse */\n    static _getUniqueStyles() {\n        // Only gather styles once per class\n        if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n        }\n        // Take care not to call `this.getStyles()` multiple times since this\n        // generates new CSSResults each time.\n        // TODO(sorvell): Since we do not cache CSSResults by input, any\n        // shared styles will generate new stylesheet objects, which is wasteful.\n        // This should be addressed when a browser ships constructable\n        // stylesheets.\n        const userStyles = this.getStyles();\n        if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            const addStyles = (styles, set) => styles.reduceRight((set, s) => \n            // Note: On IE set.add() does not return the set\n            Array.isArray(s) ? addStyles(s, set) : (set.add(s), set), set);\n            // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n            const set = addStyles(userStyles, new Set());\n            const styles = [];\n            set.forEach((v) => styles.unshift(v));\n            this._styles = styles;\n        }\n        else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n        }\n        // Ensure that there are no invalid CSSStyleSheet instances here. They are\n        // invalid in two conditions.\n        // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n        //     this is impossible to check except via .replaceSync or use\n        // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n        //     false)\n        this._styles = this._styles.map((s) => {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n                // Flatten the cssText from the passed constructible stylesheet (or\n                // undetectable non-constructible stylesheet). The user might have\n                // expected to update their stylesheets over time, but the alternative\n                // is a crash.\n                const cssText = Array.prototype.slice.call(s.cssRules)\n                    .reduce((css, rule) => css + rule.cssText, '');\n                return unsafeCSS(cssText);\n            }\n            return s;\n        });\n    }\n    /**\n     * Performs element initialization. By default this calls\n     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n     * captures any pre-set values for registered properties.\n     */\n    initialize() {\n        super.initialize();\n        this.constructor._getUniqueStyles();\n        this.renderRoot = this.createRenderRoot();\n        // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n        // element's getRootNode(). While this could be done, we're choosing not to\n        // support this now since it would require different logic around de-duping.\n        if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n        }\n    }\n    /**\n     * Returns the node into which the element should render and by default\n     * creates and returns an open shadowRoot. Implement to customize where the\n     * element's DOM is rendered. For example, to render into the element's\n     * childNodes, return `this`.\n     * @returns {Element|DocumentFragment} Returns a node into which to render.\n     */\n    createRenderRoot() {\n        return this.attachShadow({ mode: 'open' });\n    }\n    /**\n     * Applies styling to the element shadowRoot using the [[`styles`]]\n     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n     * available and will fallback otherwise. When Shadow DOM is polyfilled,\n     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n     * is available but `adoptedStyleSheets` is not, styles are appended to the\n     * end of the `shadowRoot` to [mimic spec\n     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n     */\n    adoptStyles() {\n        const styles = this.constructor._styles;\n        if (styles.length === 0) {\n            return;\n        }\n        // There are three separate cases here based on Shadow DOM support.\n        // (1) shadowRoot polyfilled: use ShadyCSS\n        // (2) shadowRoot.adoptedStyleSheets available: use it\n        // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n        // rendering\n        if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map((s) => s.cssText), this.localName);\n        }\n        else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets =\n                styles.map((s) => s instanceof CSSStyleSheet ? s : s.styleSheet);\n        }\n        else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n        }\n    }\n    connectedCallback() {\n        super.connectedCallback();\n        // Note, first update/render handles styleElement so we only call this if\n        // connected after first update.\n        if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n        }\n    }\n    /**\n     * Updates the element. This method reflects property values to attributes\n     * and calls `render` to render DOM via lit-html. Setting properties inside\n     * this method will *not* trigger another update.\n     * @param _changedProperties Map of changed properties with old values\n     */\n    update(changedProperties) {\n        // Setting properties in `render` should not trigger an update. Since\n        // updates are allowed after super.update, it's important to call `render`\n        // before that.\n        const templateResult = this.render();\n        super.update(changedProperties);\n        // If render is not implemented by the component, don't call lit-html render\n        if (templateResult !== renderNotImplemented) {\n            this.constructor\n                .render(templateResult, this.renderRoot, { scopeName: this.localName, eventContext: this });\n        }\n        // When native Shadow DOM is used but adoptedStyles are not supported,\n        // insert styling after rendering to ensure adoptedStyles have highest\n        // priority.\n        if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n            this.constructor._styles.forEach((s) => {\n                const style = document.createElement('style');\n                style.textContent = s.cssText;\n                this.renderRoot.appendChild(style);\n            });\n        }\n    }\n    /**\n     * Invoked on each update to perform rendering tasks. This method may return\n     * any value renderable by lit-html's `NodePart` - typically a\n     * `TemplateResult`. Setting properties inside this method will *not* trigger\n     * the element to update.\n     */\n    render() {\n        return renderNotImplemented;\n    }\n}\n/**\n * Ensure this class is marked as `finalized` as an optimization ensuring\n * it will not needlessly try to `finalize`.\n *\n * Note this property name is a string to prevent breaking Closure JS Compiler\n * optimizations. See updating-element.ts for more information.\n */\nLitElement['finalized'] = true;\n/**\n * Reference to the underlying library method used to render the element's\n * DOM. By default, points to the `render` method from lit-html's shady-render\n * module.\n *\n * **Most users will never need to touch this property.**\n *\n * This  property should not be confused with the `render` instance method,\n * which should be overridden to define a template for the element.\n *\n * Advanced users creating a new base class based on LitElement can override\n * this property to point to a custom render method with a signature that\n * matches [shady-render's `render`\n * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n *\n * @nocollapse\n */\nLitElement.render = render;\n//# sourceMappingURL=lit-element.js.map","/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","import { LitElement, html } from \"lit-element\";\nimport Cookies from \"js-cookie\";\n\nexport class DjangoForm extends LitElement {\n  static get properties() {\n    return {\n      method: {\n        type: String,\n        attribute: \"method\",\n      },\n      action: {\n        type: String,\n        attribute: \"action\",\n      },\n      button: {\n        type: String,\n        attribute: \"button\",\n      },\n      successMessage: {\n        type: String,\n        attribute: \"success-message\",\n      },\n      success: {\n        type: Boolean,\n      },\n    };\n  }\n\n  constructor() {\n    super();\n    this.button = \"Add\";\n    this.method = \"post\";\n    this.successMessage = \"saved\";\n    this.success = false;\n  }\n\n  get form() {\n    this.inputs = this.querySelectorAll(\"input, textarea, select\");\n    let form = new Object();\n    [...this.inputs].forEach((input) => (form[input.name] = input.value));\n    return JSON.stringify(form);\n  }\n\n  errorMessage(message) {\n    const error = document.createElement(\"p\");\n    error.innerText = message;\n    error.classList.add(\"django-form__field-error\");\n    return error;\n  }\n\n  clearErrors() {\n    const errors = document.querySelectorAll(\n      '.django-form__field-error, [part=\"django-form__fallback-error\"]'\n    );\n    if (errors) {\n      errors.forEach((element) => element.remove());\n    }\n  }\n\n  async renderErrors(errors) {\n    Object.entries(errors).map(([field, error]) => {\n      let input = document.querySelector(`#id_${field}`);\n      if (input) {\n        input.after(this.errorMessage(error));\n        return;\n      }\n      this.shadowRoot\n        .querySelector('[part=\"django-form__fallback-error\"]')\n        .appendChild(this.errorMessage(error));\n    });\n  }\n\n  async sendForm() {\n    this.clearErrors();\n    let res = await fetch(this.action, {\n      method: this.method,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRFToken\": Cookies.get(\"csrftoken\"),\n      },\n      body: this.form,\n    }).then(async (response) => {\n      if (response.status !== 200) {\n        const res_errors = await response.json();\n        this.renderErrors(res_errors);\n        return;\n      }\n      this.success = true;\n    });\n    return res;\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.sendForm();\n  }\n\n  render() {\n    return html`\n      <form part=\"django-form\" @submit=${this.handleSubmit}>\n        <slot></slot>\n        <button part=\"django-form__submit-button\" type=\"submit\">\n          ${this.button}\n        </button>\n        <p ?hidden=\"${!this.success}\" part=\"django-form__success-message\">\n          ${this.successMessage}\n        </p>\n        <div part=\"django-form__fallback-error\"></div>\n      </form>\n    `;\n  }\n}\n\ncustomElements.define(\"django-form\", DjangoForm);\n"],"names":["render","litRender","factory","registeredInModuleLoader","module","OldCookies","window","Cookies","api","noConflict","extend","i","result","arguments","length","attributes","key","decode","s","replace","decodeURIComponent","init","converter","set","value","document","path","defaults","expires","Date","toUTCString","JSON","stringify","test","e","write","encodeURIComponent","String","escape","stringifiedAttributes","attributeName","split","cookie","get","json","jar","cookies","parts","slice","join","charAt","name","read","parse","getJSON","remove","withConverter","DjangoForm","button","method","successMessage","success","inputs","querySelectorAll","form","Object","forEach","input","message","error","createElement","innerText","classList","add","errors","element","entries","map","field","querySelector","after","errorMessage","shadowRoot","appendChild","clearErrors","fetch","action","headers","body","then","response","status","res_errors","renderErrors","res","event","preventDefault","sendForm","html","handleSubmit","type","attribute","Boolean","LitElement","customElements","define"],"mappings":"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"}